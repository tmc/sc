// Statecharts.
//
// This file defines a set of types that are used to represent statecharts.
//
// The design here is heavily inspired by both Harel's statecharts and the following paper:
// [Reconciling statechart semantics](https://www.sciencedirect.com/science/article/pii/S0167642308001020).
//
// Statechart definition.
//
// A statechart SC is a tuple (S, T, E), with S a set of states, T - a set of transitions that connect the
// states, and E the set of events that transitions are triggered by. Set E is partitioned into sets E(ext)
// and E(int). Set E(ext) contains all external events, which are generated by the environment of the
// system, while set E(int) contains all internal events, which are generated by transitions in T.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: statecharts/v1/statecharts.proto

package statechartsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StateType describes the type of a state.
type StateType int32

const (
	// Unspecified state type.
	StateType_STATE_TYPE_UNSPECIFIED StateType = 0
	// A basic state (has no sub-states).
	StateType_STATE_TYPE_BASIC StateType = 1
	// A normal state (has sub-states related by XOR semantics).
	StateType_STATE_TYPE_NORMAL StateType = 2
	// A parallel state (has sub-states related by AND semantics). Also known in the literature as an "orthogonal state".
	StateType_STATE_TYPE_PARALLEL StateType = 3
)

// Enum value maps for StateType.
var (
	StateType_name = map[int32]string{
		0: "STATE_TYPE_UNSPECIFIED",
		1: "STATE_TYPE_BASIC",
		2: "STATE_TYPE_NORMAL",
		3: "STATE_TYPE_PARALLEL",
	}
	StateType_value = map[string]int32{
		"STATE_TYPE_UNSPECIFIED": 0,
		"STATE_TYPE_BASIC":       1,
		"STATE_TYPE_NORMAL":      2,
		"STATE_TYPE_PARALLEL":    3,
	}
)

func (x StateType) Enum() *StateType {
	p := new(StateType)
	*p = x
	return p
}

func (x StateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateType) Descriptor() protoreflect.EnumDescriptor {
	return file_statecharts_v1_statecharts_proto_enumTypes[0].Descriptor()
}

func (StateType) Type() protoreflect.EnumType {
	return &file_statecharts_v1_statecharts_proto_enumTypes[0]
}

func (x StateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateType.Descriptor instead.
func (StateType) EnumDescriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{0}
}

// MachineState encodes the high-level state of a statechart.
type MachineState int32

const (
	// The machine is in an unspecified state.
	MachineState_MACHINE_STATE_UNSPECIFIED MachineState = 0
	// The machine is in a running state.
	MachineState_MACHINE_STATE_RUNNING MachineState = 1
	// The machine is in a stopped state.
	MachineState_MACHINE_STATE_STOPPED MachineState = 2
)

// Enum value maps for MachineState.
var (
	MachineState_name = map[int32]string{
		0: "MACHINE_STATE_UNSPECIFIED",
		1: "MACHINE_STATE_RUNNING",
		2: "MACHINE_STATE_STOPPED",
	}
	MachineState_value = map[string]int32{
		"MACHINE_STATE_UNSPECIFIED": 0,
		"MACHINE_STATE_RUNNING":     1,
		"MACHINE_STATE_STOPPED":     2,
	}
)

func (x MachineState) Enum() *MachineState {
	p := new(MachineState)
	*p = x
	return p
}

func (x MachineState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineState) Descriptor() protoreflect.EnumDescriptor {
	return file_statecharts_v1_statecharts_proto_enumTypes[1].Descriptor()
}

func (MachineState) Type() protoreflect.EnumType {
	return &file_statecharts_v1_statecharts_proto_enumTypes[1]
}

func (x MachineState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineState.Descriptor instead.
func (MachineState) EnumDescriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{1}
}

// Statechart definition.
type Statechart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The top-level states in the statechart.
	States []*State `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
	// Transitions is the set of transitions that connect the states.
	Transistions []*Transition `protobuf:"bytes,2,rep,name=transistions,proto3" json:"transistions,omitempty"`
	// Events is the set of events that transitions are triggered by.
	Events []*Event `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *Statechart) Reset() {
	*x = Statechart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statechart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statechart) ProtoMessage() {}

func (x *Statechart) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statechart.ProtoReflect.Descriptor instead.
func (*Statechart) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{0}
}

func (x *Statechart) GetStates() []*State {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *Statechart) GetTransistions() []*Transition {
	if x != nil {
		return x.Transistions
	}
	return nil
}

func (x *Statechart) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// State is a state in a statechart.
type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The label of the state.
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// The type of the state.
	Type StateType `protobuf:"varint,2,opt,name=type,proto3,enum=statecharts.v1.StateType" json:"type,omitempty"`
	// The sub-states. If a state has no sub-states, it is considered a BASIC state.
	Children []*State `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
	// The state is the initial state of its parent state.
	IsInitial bool `protobuf:"varint,4,opt,name=is_initial,json=isInitial,proto3" json:"is_initial,omitempty"`
	// The state is the final state of its parent state.
	IsFinal bool `protobuf:"varint,5,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{1}
}

func (x *State) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *State) GetType() StateType {
	if x != nil {
		return x.Type
	}
	return StateType_STATE_TYPE_UNSPECIFIED
}

func (x *State) GetChildren() []*State {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *State) GetIsInitial() bool {
	if x != nil {
		return x.IsInitial
	}
	return false
}

func (x *State) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

// Transition is a transition between states in a statechart.
// A transition connects source to target states.
type Transition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The from State reference.
	From []string `protobuf:"bytes,1,rep,name=from,proto3" json:"from,omitempty"`
	// The to State
	To []string `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
	// The label of the event that triggers the transition.
	Event string `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	// The guard of the transition.
	Guard *Guard `protobuf:"bytes,4,opt,name=guard,proto3" json:"guard,omitempty"`
	// The action(s) of the transition.
	Actions []*Action `protobuf:"bytes,5,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Transition) Reset() {
	*x = Transition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transition) ProtoMessage() {}

func (x *Transition) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transition.ProtoReflect.Descriptor instead.
func (*Transition) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{2}
}

func (x *Transition) GetFrom() []string {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Transition) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Transition) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *Transition) GetGuard() *Guard {
	if x != nil {
		return x.Guard
	}
	return nil
}

func (x *Transition) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

// Event is an event in a statechart.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The label of the event.
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// Guard is a guard for a transition.
type Guard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The guard expression.
	Expression string `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *Guard) Reset() {
	*x = Guard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guard) ProtoMessage() {}

func (x *Guard) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guard.ProtoReflect.Descriptor instead.
func (*Guard) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{4}
}

func (x *Guard) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

// Action is an action for a transition.
type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The label of the action.
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{5}
}

func (x *Action) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// StateRef is a reference to a state.
type StateRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The label of the state.
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *StateRef) Reset() {
	*x = StateRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRef) ProtoMessage() {}

func (x *StateRef) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRef.ProtoReflect.Descriptor instead.
func (*StateRef) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{6}
}

func (x *StateRef) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// StatechartStatus is a status for a statechart which is defined by a subset of the states that are active.
type StatechartStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The set of states in the status.
	States []*StateRef `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *StatechartStatus) Reset() {
	*x = StatechartStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatechartStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatechartStatus) ProtoMessage() {}

func (x *StatechartStatus) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatechartStatus.ProtoReflect.Descriptor instead.
func (*StatechartStatus) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{7}
}

func (x *StatechartStatus) GetStates() []*StateRef {
	if x != nil {
		return x.States
	}
	return nil
}

// Machine is an instance of a statechart.
type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the machine.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The overall state of the machine.
	State MachineState `protobuf:"varint,2,opt,name=state,proto3,enum=statecharts.v1.MachineState" json:"state,omitempty"`
	// The context of the machine.
	Context *structpb.Struct `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	// The statechart definition.
	Statechart *Statechart `protobuf:"bytes,4,opt,name=statechart,proto3" json:"statechart,omitempty"`
	// The current status of the machine.
	Status *StatechartStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// The history of events that have occurred on the machine.
	EventHistory []*EventHistoryEntry `protobuf:"bytes,6,rep,name=event_history,json=eventHistory,proto3" json:"event_history,omitempty"`
	// The history of transitions that have occurred on the machine.
	TransitionHistory []*TransitionHistoryEntry `protobuf:"bytes,7,rep,name=transition_history,json=transitionHistory,proto3" json:"transition_history,omitempty"`
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{8}
}

func (x *Machine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Machine) GetState() MachineState {
	if x != nil {
		return x.State
	}
	return MachineState_MACHINE_STATE_UNSPECIFIED
}

func (x *Machine) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Machine) GetStatechart() *Statechart {
	if x != nil {
		return x.Statechart
	}
	return nil
}

func (x *Machine) GetStatus() *StatechartStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Machine) GetEventHistory() []*EventHistoryEntry {
	if x != nil {
		return x.EventHistory
	}
	return nil
}

func (x *Machine) GetTransitionHistory() []*TransitionHistoryEntry {
	if x != nil {
		return x.TransitionHistory
	}
	return nil
}

// EventHistoryEntry is an entry in the event history of a machine.
type EventHistoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The event that occurred.
	Event string `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// The timestamp of the transition.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The context of the event.
	Context *structpb.Struct `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *EventHistoryEntry) Reset() {
	*x = EventHistoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventHistoryEntry) ProtoMessage() {}

func (x *EventHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventHistoryEntry.ProtoReflect.Descriptor instead.
func (*EventHistoryEntry) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{9}
}

func (x *EventHistoryEntry) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *EventHistoryEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EventHistoryEntry) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

// TransitionHistoryEntry is an entry in the transition history of a machine.
type TransitionHistoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transition that occurred.
	Transition string `protobuf:"bytes,1,opt,name=transition,proto3" json:"transition,omitempty"`
	// The timestamp of the transition.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The context of the transition.
	Context *structpb.Struct `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *TransitionHistoryEntry) Reset() {
	*x = TransitionHistoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_statecharts_v1_statecharts_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransitionHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitionHistoryEntry) ProtoMessage() {}

func (x *TransitionHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitionHistoryEntry.ProtoReflect.Descriptor instead.
func (*TransitionHistoryEntry) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{10}
}

func (x *TransitionHistoryEntry) GetTransition() string {
	if x != nil {
		return x.Transition
	}
	return ""
}

func (x *TransitionHistoryEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TransitionHistoryEntry) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

var File_statecharts_v1_statecharts_proto protoreflect.FileDescriptor

var file_statecharts_v1_statecharts_proto_rawDesc = []byte{
	0x0a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x3e, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x2d, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb9,
	0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2d,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0xa5, 0x01, 0x0a, 0x0a, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x05, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x12, 0x30, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x1d, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x22, 0x27, 0x0a, 0x05, 0x47, 0x75, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x20, 0x0a, 0x08, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x44, 0x0a, 0x10,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x95, 0x03, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x74, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x55, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2a, 0x6d, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x41, 0x52, 0x41, 0x4c, 0x4c, 0x45, 0x4c, 0x10, 0x03, 0x2a, 0x63, 0x0a, 0x0c, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x41,
	0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x43,
	0x48, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x02, 0x42,
	0xaf, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x53, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6d, 0x63, 0x2f, 0x73, 0x63, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58,
	0xaa, 0x02, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x1a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_statecharts_v1_statecharts_proto_rawDescOnce sync.Once
	file_statecharts_v1_statecharts_proto_rawDescData = file_statecharts_v1_statecharts_proto_rawDesc
)

func file_statecharts_v1_statecharts_proto_rawDescGZIP() []byte {
	file_statecharts_v1_statecharts_proto_rawDescOnce.Do(func() {
		file_statecharts_v1_statecharts_proto_rawDescData = protoimpl.X.CompressGZIP(file_statecharts_v1_statecharts_proto_rawDescData)
	})
	return file_statecharts_v1_statecharts_proto_rawDescData
}

var file_statecharts_v1_statecharts_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_statecharts_v1_statecharts_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_statecharts_v1_statecharts_proto_goTypes = []interface{}{
	(StateType)(0),                 // 0: statecharts.v1.StateType
	(MachineState)(0),              // 1: statecharts.v1.MachineState
	(*Statechart)(nil),             // 2: statecharts.v1.Statechart
	(*State)(nil),                  // 3: statecharts.v1.State
	(*Transition)(nil),             // 4: statecharts.v1.Transition
	(*Event)(nil),                  // 5: statecharts.v1.Event
	(*Guard)(nil),                  // 6: statecharts.v1.Guard
	(*Action)(nil),                 // 7: statecharts.v1.Action
	(*StateRef)(nil),               // 8: statecharts.v1.StateRef
	(*StatechartStatus)(nil),       // 9: statecharts.v1.StatechartStatus
	(*Machine)(nil),                // 10: statecharts.v1.Machine
	(*EventHistoryEntry)(nil),      // 11: statecharts.v1.EventHistoryEntry
	(*TransitionHistoryEntry)(nil), // 12: statecharts.v1.TransitionHistoryEntry
	(*structpb.Struct)(nil),        // 13: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),  // 14: google.protobuf.Timestamp
}
var file_statecharts_v1_statecharts_proto_depIdxs = []int32{
	3,  // 0: statecharts.v1.Statechart.states:type_name -> statecharts.v1.State
	4,  // 1: statecharts.v1.Statechart.transistions:type_name -> statecharts.v1.Transition
	5,  // 2: statecharts.v1.Statechart.events:type_name -> statecharts.v1.Event
	0,  // 3: statecharts.v1.State.type:type_name -> statecharts.v1.StateType
	3,  // 4: statecharts.v1.State.children:type_name -> statecharts.v1.State
	6,  // 5: statecharts.v1.Transition.guard:type_name -> statecharts.v1.Guard
	7,  // 6: statecharts.v1.Transition.actions:type_name -> statecharts.v1.Action
	8,  // 7: statecharts.v1.StatechartStatus.states:type_name -> statecharts.v1.StateRef
	1,  // 8: statecharts.v1.Machine.state:type_name -> statecharts.v1.MachineState
	13, // 9: statecharts.v1.Machine.context:type_name -> google.protobuf.Struct
	2,  // 10: statecharts.v1.Machine.statechart:type_name -> statecharts.v1.Statechart
	9,  // 11: statecharts.v1.Machine.status:type_name -> statecharts.v1.StatechartStatus
	11, // 12: statecharts.v1.Machine.event_history:type_name -> statecharts.v1.EventHistoryEntry
	12, // 13: statecharts.v1.Machine.transition_history:type_name -> statecharts.v1.TransitionHistoryEntry
	14, // 14: statecharts.v1.EventHistoryEntry.timestamp:type_name -> google.protobuf.Timestamp
	13, // 15: statecharts.v1.EventHistoryEntry.context:type_name -> google.protobuf.Struct
	14, // 16: statecharts.v1.TransitionHistoryEntry.timestamp:type_name -> google.protobuf.Timestamp
	13, // 17: statecharts.v1.TransitionHistoryEntry.context:type_name -> google.protobuf.Struct
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_statecharts_v1_statecharts_proto_init() }
func file_statecharts_v1_statecharts_proto_init() {
	if File_statecharts_v1_statecharts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_statecharts_v1_statecharts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statechart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statecharts_v1_statecharts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statecharts_v1_statecharts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statecharts_v1_statecharts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statecharts_v1_statecharts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statecharts_v1_statecharts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statecharts_v1_statecharts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statecharts_v1_statecharts_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatechartStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statecharts_v1_statecharts_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statecharts_v1_statecharts_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventHistoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_statecharts_v1_statecharts_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransitionHistoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_statecharts_v1_statecharts_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_statecharts_v1_statecharts_proto_goTypes,
		DependencyIndexes: file_statecharts_v1_statecharts_proto_depIdxs,
		EnumInfos:         file_statecharts_v1_statecharts_proto_enumTypes,
		MessageInfos:      file_statecharts_v1_statecharts_proto_msgTypes,
	}.Build()
	File_statecharts_v1_statecharts_proto = out.File
	file_statecharts_v1_statecharts_proto_rawDesc = nil
	file_statecharts_v1_statecharts_proto_goTypes = nil
	file_statecharts_v1_statecharts_proto_depIdxs = nil
}
