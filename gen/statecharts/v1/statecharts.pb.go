// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: statecharts/v1/statecharts.proto

package statechartsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// StateType describes the type of a state.
// It can be a basic state, normal state, or parallel/orthogonal state.
type StateType int32

const (
	StateType_STATE_TYPE_UNSPECIFIED StateType = 0 // Unspecified state type.
	StateType_STATE_TYPE_BASIC       StateType = 1 // A basic state (has no sub-states).
	StateType_STATE_TYPE_NORMAL      StateType = 2 // A normal state (has sub-states related by XOR semantics).
	StateType_STATE_TYPE_PARALLEL    StateType = 3 // A parallel state (has sub-states related by AND semantics).
	// Aliases for clarity with academic/literature terminology
	StateType_STATE_TYPE_ORTHOGONAL StateType = 3 // An alias for STATE_TYPE_PARALLEL. An orthogonal state is a state with concurrently active sub-states (AND semantics).
)

// Enum value maps for StateType.
var (
	StateType_name = map[int32]string{
		0: "STATE_TYPE_UNSPECIFIED",
		1: "STATE_TYPE_BASIC",
		2: "STATE_TYPE_NORMAL",
		3: "STATE_TYPE_PARALLEL",
		// Duplicate value: 3: "STATE_TYPE_ORTHOGONAL",
	}
	StateType_value = map[string]int32{
		"STATE_TYPE_UNSPECIFIED": 0,
		"STATE_TYPE_BASIC":       1,
		"STATE_TYPE_NORMAL":      2,
		"STATE_TYPE_PARALLEL":    3,
		"STATE_TYPE_ORTHOGONAL":  3,
	}
)

func (x StateType) Enum() *StateType {
	p := new(StateType)
	*p = x
	return p
}

func (x StateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateType) Descriptor() protoreflect.EnumDescriptor {
	return file_statecharts_v1_statecharts_proto_enumTypes[0].Descriptor()
}

func (StateType) Type() protoreflect.EnumType {
	return &file_statecharts_v1_statecharts_proto_enumTypes[0]
}

func (x StateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateType.Descriptor instead.
func (StateType) EnumDescriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{0}
}

// *
// MachineState encodes the high-level state of a statechart.
type MachineState int32

const (
	MachineState_MACHINE_STATE_UNSPECIFIED MachineState = 0 // The machine is in an unspecified state.
	MachineState_MACHINE_STATE_RUNNING     MachineState = 1 // The machine is in a running state.
	MachineState_MACHINE_STATE_STOPPED     MachineState = 2 // The machine is in a stopped state.
)

// Enum value maps for MachineState.
var (
	MachineState_name = map[int32]string{
		0: "MACHINE_STATE_UNSPECIFIED",
		1: "MACHINE_STATE_RUNNING",
		2: "MACHINE_STATE_STOPPED",
	}
	MachineState_value = map[string]int32{
		"MACHINE_STATE_UNSPECIFIED": 0,
		"MACHINE_STATE_RUNNING":     1,
		"MACHINE_STATE_STOPPED":     2,
	}
)

func (x MachineState) Enum() *MachineState {
	p := new(MachineState)
	*p = x
	return p
}

func (x MachineState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineState) Descriptor() protoreflect.EnumDescriptor {
	return file_statecharts_v1_statecharts_proto_enumTypes[1].Descriptor()
}

func (MachineState) Type() protoreflect.EnumType {
	return &file_statecharts_v1_statecharts_proto_enumTypes[1]
}

func (x MachineState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineState.Descriptor instead.
func (MachineState) EnumDescriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{1}
}

// * Complete, static description of a statechart.
type Statechart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RootState     *State                 `protobuf:"bytes,1,opt,name=root_state,json=rootState,proto3" json:"root_state,omitempty"` // Root node, label must be "__root__".
	Transitions   []*Transition          `protobuf:"bytes,2,rep,name=transitions,proto3" json:"transitions,omitempty"`
	Events        []*Event               `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"` // Alphabet (superset allowed).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Statechart) Reset() {
	*x = Statechart{}
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statechart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statechart) ProtoMessage() {}

func (x *Statechart) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statechart.ProtoReflect.Descriptor instead.
func (*Statechart) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{0}
}

func (x *Statechart) GetRootState() *State {
	if x != nil {
		return x.RootState
	}
	return nil
}

func (x *Statechart) GetTransitions() []*Transition {
	if x != nil {
		return x.Transitions
	}
	return nil
}

func (x *Statechart) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// *
// State represents a state in a statechart.
// Each state has a label, type, and optionally sub-states (children).
type State struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`                              // The label of the state.
	Type          StateType              `protobuf:"varint,2,opt,name=type,proto3,enum=statecharts.v1.StateType" json:"type,omitempty"` // The type of the state.
	Children      []*State               `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`                        // The sub-states. If a state has no sub-states, it is considered a BASIC state.
	IsInitial     bool                   `protobuf:"varint,4,opt,name=is_initial,json=isInitial,proto3" json:"is_initial,omitempty"`    // Default child of XOR composite.
	IsFinal       bool                   `protobuf:"varint,5,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`          // Terminal child.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *State) Reset() {
	*x = State{}
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{1}
}

func (x *State) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *State) GetType() StateType {
	if x != nil {
		return x.Type
	}
	return StateType_STATE_TYPE_UNSPECIFIED
}

func (x *State) GetChildren() []*State {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *State) GetIsInitial() bool {
	if x != nil {
		return x.IsInitial
	}
	return false
}

func (x *State) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

// *
// Transition represents a transition between states in a statechart.
// It connects source (from) states to target (to) states and is triggered by an event.
type Transition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`     // The label of the transition.
	From          []string               `protobuf:"bytes,2,rep,name=from,proto3" json:"from,omitempty"`       // The source (from) State reference(s).
	To            []string               `protobuf:"bytes,3,rep,name=to,proto3" json:"to,omitempty"`           // The target (to) State reference(s).
	Event         string                 `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`     // The label of the event that triggers the transition.
	Guard         *Guard                 `protobuf:"bytes,5,opt,name=guard,proto3" json:"guard,omitempty"`     // The guard of the transition, a condition for the transition to occur.
	Actions       []*Action              `protobuf:"bytes,6,rep,name=actions,proto3" json:"actions,omitempty"` // The action(s) associated with the transition.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transition) Reset() {
	*x = Transition{}
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transition) ProtoMessage() {}

func (x *Transition) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transition.ProtoReflect.Descriptor instead.
func (*Transition) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{2}
}

func (x *Transition) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Transition) GetFrom() []string {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Transition) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Transition) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *Transition) GetGuard() *Guard {
	if x != nil {
		return x.Guard
	}
	return nil
}

func (x *Transition) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

// * Event represents an event in a statechart. Each event has a label that identifies it.
type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// * Guard is a guard for a transition. It represents a condition that must be satisfied for the transition to occur.
type Guard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expression    string                 `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Guard) Reset() {
	*x = Guard{}
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Guard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guard) ProtoMessage() {}

func (x *Guard) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guard.ProtoReflect.Descriptor instead.
func (*Guard) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{4}
}

func (x *Guard) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

// * Action is an action associated with a transition. Each action has a label that identifies it.
type Action struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{5}
}

func (x *Action) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// * StateRef is a reference to a state. It contains the label of the referenced state.
type StateRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateRef) Reset() {
	*x = StateRef{}
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRef) ProtoMessage() {}

func (x *StateRef) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRef.ProtoReflect.Descriptor instead.
func (*StateRef) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{6}
}

func (x *StateRef) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// * Configuration is a status for a statechart, which is defined by a subset of the states that are active.
type Configuration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	States        []*StateRef            `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configuration.ProtoReflect.Descriptor instead.
func (*Configuration) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{7}
}

func (x *Configuration) GetStates() []*StateRef {
	if x != nil {
		return x.States
	}
	return nil
}

// * Machine is an instance of a statechart.
type Machine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // The id of the machine.
	State         MachineState           `protobuf:"varint,2,opt,name=state,proto3,enum=statecharts.v1.MachineState" json:"state,omitempty"` // The overall state of the machine.
	Context       *structpb.Struct       `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`                               // The context of the machine.
	Statechart    *Statechart            `protobuf:"bytes,4,opt,name=statechart,proto3" json:"statechart,omitempty"`                         // The statechart definition.
	Configuration *Configuration         `protobuf:"bytes,5,opt,name=configuration,proto3" json:"configuration,omitempty"`                   // The current configuration of the machine.
	StepHistory   []*Step                `protobuf:"bytes,6,rep,name=step_history,json=stepHistory,proto3" json:"step_history,omitempty"`    // The history of steps that have been carried out by the machine.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Machine) Reset() {
	*x = Machine{}
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{8}
}

func (x *Machine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Machine) GetState() MachineState {
	if x != nil {
		return x.State
	}
	return MachineState_MACHINE_STATE_UNSPECIFIED
}

func (x *Machine) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Machine) GetStatechart() *Statechart {
	if x != nil {
		return x.Statechart
	}
	return nil
}

func (x *Machine) GetConfiguration() *Configuration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *Machine) GetStepHistory() []*Step {
	if x != nil {
		return x.StepHistory
	}
	return nil
}

// * Step is a step in the execution of a statechart.
type Step struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Events                 []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`                                                               // The events that occurred.
	Transitions            []*Transition          `protobuf:"bytes,2,rep,name=transitions,proto3" json:"transitions,omitempty"`                                                     // The transitions that occurred.
	StartingConfiguration  *Configuration         `protobuf:"bytes,3,opt,name=starting_configuration,json=startingConfiguration,proto3" json:"starting_configuration,omitempty"`    // The starting configuration.
	ResultingConfiguration *Configuration         `protobuf:"bytes,4,opt,name=resulting_configuration,json=resultingConfiguration,proto3" json:"resulting_configuration,omitempty"` // The resulting configuration.
	Context                *structpb.Struct       `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`                                                             // The context of the event.
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Step) Reset() {
	*x = Step{}
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Step) ProtoMessage() {}

func (x *Step) ProtoReflect() protoreflect.Message {
	mi := &file_statecharts_v1_statecharts_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Step.ProtoReflect.Descriptor instead.
func (*Step) Descriptor() ([]byte, []int) {
	return file_statecharts_v1_statecharts_proto_rawDescGZIP(), []int{9}
}

func (x *Step) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Step) GetTransitions() []*Transition {
	if x != nil {
		return x.Transitions
	}
	return nil
}

func (x *Step) GetStartingConfiguration() *Configuration {
	if x != nil {
		return x.StartingConfiguration
	}
	return nil
}

func (x *Step) GetResultingConfiguration() *Configuration {
	if x != nil {
		return x.ResultingConfiguration
	}
	return nil
}

func (x *Step) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

var File_statecharts_v1_statecharts_proto protoreflect.FileDescriptor

const file_statecharts_v1_statecharts_proto_rawDesc = "" +
	"\n" +
	" statecharts/v1/statecharts.proto\x12\x0estatecharts.v1\x1a\x1cgoogle/protobuf/struct.proto\"\xaf\x01\n" +
	"\n" +
	"Statechart\x124\n" +
	"\n" +
	"root_state\x18\x01 \x01(\v2\x15.statecharts.v1.StateR\trootState\x12<\n" +
	"\vtransitions\x18\x02 \x03(\v2\x1a.statecharts.v1.TransitionR\vtransitions\x12-\n" +
	"\x06events\x18\x03 \x03(\v2\x15.statecharts.v1.EventR\x06events\"\xb9\x01\n" +
	"\x05State\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12-\n" +
	"\x04type\x18\x02 \x01(\x0e2\x19.statecharts.v1.StateTypeR\x04type\x121\n" +
	"\bchildren\x18\x03 \x03(\v2\x15.statecharts.v1.StateR\bchildren\x12\x1d\n" +
	"\n" +
	"is_initial\x18\x04 \x01(\bR\tisInitial\x12\x19\n" +
	"\bis_final\x18\x05 \x01(\bR\aisFinal\"\xbb\x01\n" +
	"\n" +
	"Transition\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12\x12\n" +
	"\x04from\x18\x02 \x03(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x03 \x03(\tR\x02to\x12\x14\n" +
	"\x05event\x18\x04 \x01(\tR\x05event\x12+\n" +
	"\x05guard\x18\x05 \x01(\v2\x15.statecharts.v1.GuardR\x05guard\x120\n" +
	"\aactions\x18\x06 \x03(\v2\x16.statecharts.v1.ActionR\aactions\"\x1d\n" +
	"\x05Event\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\"'\n" +
	"\x05Guard\x12\x1e\n" +
	"\n" +
	"expression\x18\x01 \x01(\tR\n" +
	"expression\"\x1e\n" +
	"\x06Action\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\" \n" +
	"\bStateRef\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\"A\n" +
	"\rConfiguration\x120\n" +
	"\x06states\x18\x01 \x03(\v2\x18.statecharts.v1.StateRefR\x06states\"\xba\x02\n" +
	"\aMachine\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x05state\x18\x02 \x01(\x0e2\x1c.statecharts.v1.MachineStateR\x05state\x121\n" +
	"\acontext\x18\x03 \x01(\v2\x17.google.protobuf.StructR\acontext\x12:\n" +
	"\n" +
	"statechart\x18\x04 \x01(\v2\x1a.statecharts.v1.StatechartR\n" +
	"statechart\x12C\n" +
	"\rconfiguration\x18\x05 \x01(\v2\x1d.statecharts.v1.ConfigurationR\rconfiguration\x127\n" +
	"\fstep_history\x18\x06 \x03(\v2\x14.statecharts.v1.StepR\vstepHistory\"\xd4\x02\n" +
	"\x04Step\x12-\n" +
	"\x06events\x18\x01 \x03(\v2\x15.statecharts.v1.EventR\x06events\x12<\n" +
	"\vtransitions\x18\x02 \x03(\v2\x1a.statecharts.v1.TransitionR\vtransitions\x12T\n" +
	"\x16starting_configuration\x18\x03 \x01(\v2\x1d.statecharts.v1.ConfigurationR\x15startingConfiguration\x12V\n" +
	"\x17resulting_configuration\x18\x04 \x01(\v2\x1d.statecharts.v1.ConfigurationR\x16resultingConfiguration\x121\n" +
	"\acontext\x18\x05 \x01(\v2\x17.google.protobuf.StructR\acontext*\x8c\x01\n" +
	"\tStateType\x12\x1a\n" +
	"\x16STATE_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10STATE_TYPE_BASIC\x10\x01\x12\x15\n" +
	"\x11STATE_TYPE_NORMAL\x10\x02\x12\x17\n" +
	"\x13STATE_TYPE_PARALLEL\x10\x03\x12\x19\n" +
	"\x15STATE_TYPE_ORTHOGONAL\x10\x03\x1a\x02\x10\x01*c\n" +
	"\fMachineState\x12\x1d\n" +
	"\x19MACHINE_STATE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15MACHINE_STATE_RUNNING\x10\x01\x12\x19\n" +
	"\x15MACHINE_STATE_STOPPED\x10\x02B\xaf\x01\n" +
	"\x12com.statecharts.v1B\x10StatechartsProtoP\x01Z.github.com/tmc/sc/statecharts/v1;statechartsv1\xa2\x02\x03SXX\xaa\x02\x0eStatecharts.V1\xca\x02\x0eStatecharts\\V1\xe2\x02\x1aStatecharts\\V1\\GPBMetadata\xea\x02\x0fStatecharts::V1b\x06proto3"

var (
	file_statecharts_v1_statecharts_proto_rawDescOnce sync.Once
	file_statecharts_v1_statecharts_proto_rawDescData []byte
)

func file_statecharts_v1_statecharts_proto_rawDescGZIP() []byte {
	file_statecharts_v1_statecharts_proto_rawDescOnce.Do(func() {
		file_statecharts_v1_statecharts_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_statecharts_v1_statecharts_proto_rawDesc), len(file_statecharts_v1_statecharts_proto_rawDesc)))
	})
	return file_statecharts_v1_statecharts_proto_rawDescData
}

var file_statecharts_v1_statecharts_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_statecharts_v1_statecharts_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_statecharts_v1_statecharts_proto_goTypes = []any{
	(StateType)(0),          // 0: statecharts.v1.StateType
	(MachineState)(0),       // 1: statecharts.v1.MachineState
	(*Statechart)(nil),      // 2: statecharts.v1.Statechart
	(*State)(nil),           // 3: statecharts.v1.State
	(*Transition)(nil),      // 4: statecharts.v1.Transition
	(*Event)(nil),           // 5: statecharts.v1.Event
	(*Guard)(nil),           // 6: statecharts.v1.Guard
	(*Action)(nil),          // 7: statecharts.v1.Action
	(*StateRef)(nil),        // 8: statecharts.v1.StateRef
	(*Configuration)(nil),   // 9: statecharts.v1.Configuration
	(*Machine)(nil),         // 10: statecharts.v1.Machine
	(*Step)(nil),            // 11: statecharts.v1.Step
	(*structpb.Struct)(nil), // 12: google.protobuf.Struct
}
var file_statecharts_v1_statecharts_proto_depIdxs = []int32{
	3,  // 0: statecharts.v1.Statechart.root_state:type_name -> statecharts.v1.State
	4,  // 1: statecharts.v1.Statechart.transitions:type_name -> statecharts.v1.Transition
	5,  // 2: statecharts.v1.Statechart.events:type_name -> statecharts.v1.Event
	0,  // 3: statecharts.v1.State.type:type_name -> statecharts.v1.StateType
	3,  // 4: statecharts.v1.State.children:type_name -> statecharts.v1.State
	6,  // 5: statecharts.v1.Transition.guard:type_name -> statecharts.v1.Guard
	7,  // 6: statecharts.v1.Transition.actions:type_name -> statecharts.v1.Action
	8,  // 7: statecharts.v1.Configuration.states:type_name -> statecharts.v1.StateRef
	1,  // 8: statecharts.v1.Machine.state:type_name -> statecharts.v1.MachineState
	12, // 9: statecharts.v1.Machine.context:type_name -> google.protobuf.Struct
	2,  // 10: statecharts.v1.Machine.statechart:type_name -> statecharts.v1.Statechart
	9,  // 11: statecharts.v1.Machine.configuration:type_name -> statecharts.v1.Configuration
	11, // 12: statecharts.v1.Machine.step_history:type_name -> statecharts.v1.Step
	5,  // 13: statecharts.v1.Step.events:type_name -> statecharts.v1.Event
	4,  // 14: statecharts.v1.Step.transitions:type_name -> statecharts.v1.Transition
	9,  // 15: statecharts.v1.Step.starting_configuration:type_name -> statecharts.v1.Configuration
	9,  // 16: statecharts.v1.Step.resulting_configuration:type_name -> statecharts.v1.Configuration
	12, // 17: statecharts.v1.Step.context:type_name -> google.protobuf.Struct
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_statecharts_v1_statecharts_proto_init() }
func file_statecharts_v1_statecharts_proto_init() {
	if File_statecharts_v1_statecharts_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_statecharts_v1_statecharts_proto_rawDesc), len(file_statecharts_v1_statecharts_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_statecharts_v1_statecharts_proto_goTypes,
		DependencyIndexes: file_statecharts_v1_statecharts_proto_depIdxs,
		EnumInfos:         file_statecharts_v1_statecharts_proto_enumTypes,
		MessageInfos:      file_statecharts_v1_statecharts_proto_msgTypes,
	}.Build()
	File_statecharts_v1_statecharts_proto = out.File
	file_statecharts_v1_statecharts_proto_goTypes = nil
	file_statecharts_v1_statecharts_proto_depIdxs = nil
}
